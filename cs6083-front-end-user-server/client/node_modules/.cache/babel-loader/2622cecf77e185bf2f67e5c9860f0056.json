{"ast":null,"code":"import { REGISTER_SUCCESS, REGISTER_FAIL, USER_LOADED, AUTH_ERROR } from \"../types\";\nimport axios from \"axios\";\nimport { setAlert } from \"./alert\";\nimport setAuthToken from \"../../utils/setAuthToken\"; // Load User\n\nexport const loadUser = () => async dispatch => {\n  if (localStorage.token) {\n    setAuthToken;\n  }\n}; // Register User\n\nexport const registerUser = ({\n  firstName,\n  lastName,\n  email,\n  password\n}) => async dispatch => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n  const body = JSON.stringify({\n    firstName,\n    lastName,\n    email,\n    password\n  });\n\n  try {\n    const res = await axios.post(\"/api/user\", body, config);\n    dispatch({\n      type: REGISTER_SUCCESS,\n      payload: res.data\n    });\n  } catch (err) {\n    const errors = err.response.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, \"danger\")));\n    }\n\n    dispatch({\n      type: REGISTER_FAIL\n    });\n  }\n};","map":{"version":3,"sources":["/Users/chrisqin/Desktop/cs6083/client/src/redux/actions/auth.js"],"names":["REGISTER_SUCCESS","REGISTER_FAIL","USER_LOADED","AUTH_ERROR","axios","setAlert","setAuthToken","loadUser","dispatch","localStorage","token","registerUser","firstName","lastName","email","password","config","headers","body","JSON","stringify","res","post","type","payload","data","err","errors","response","forEach","error","msg"],"mappings":"AAAA,SACEA,gBADF,EAEEC,aAFF,EAGEC,WAHF,EAIEC,UAJF,QAKO,UALP;AAMA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,SAAzB;AACA,OAAOC,YAAP,MAAyB,0BAAzB,C,CAEA;;AACA,OAAO,MAAMC,QAAQ,GAAG,MAAM,MAAOC,QAAP,IAAoB;AAChD,MAAIC,YAAY,CAACC,KAAjB,EAAwB;AACtBJ,IAAAA,YAAY;AACb;AACF,CAJM,C,CAMP;;AACA,OAAO,MAAMK,YAAY,GAAG,CAAC;AAC3BC,EAAAA,SAD2B;AAE3BC,EAAAA,QAF2B;AAG3BC,EAAAA,KAH2B;AAI3BC,EAAAA;AAJ2B,CAAD,KAKtB,MAAOP,QAAP,IAAoB;AACxB,QAAMQ,MAAM,GAAG;AACbC,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT;AADI,GAAf;AAMA,QAAMC,IAAI,GAAGC,IAAI,CAACC,SAAL,CAAe;AAAER,IAAAA,SAAF;AAAaC,IAAAA,QAAb;AAAuBC,IAAAA,KAAvB;AAA8BC,IAAAA;AAA9B,GAAf,CAAb;;AAEA,MAAI;AACF,UAAMM,GAAG,GAAG,MAAMjB,KAAK,CAACkB,IAAN,CAAW,WAAX,EAAwBJ,IAAxB,EAA8BF,MAA9B,CAAlB;AAEAR,IAAAA,QAAQ,CAAC;AACPe,MAAAA,IAAI,EAAEvB,gBADC;AAEPwB,MAAAA,OAAO,EAAEH,GAAG,CAACI;AAFN,KAAD,CAAR;AAID,GAPD,CAOE,OAAOC,GAAP,EAAY;AACZ,UAAMC,MAAM,GAAGD,GAAG,CAACE,QAAJ,CAAaD,MAA5B;;AAEA,QAAIA,MAAJ,EAAY;AACVA,MAAAA,MAAM,CAACE,OAAP,CAAgBC,KAAD,IAAWtB,QAAQ,CAACH,QAAQ,CAACyB,KAAK,CAACC,GAAP,EAAY,QAAZ,CAAT,CAAlC;AACD;;AACDvB,IAAAA,QAAQ,CAAC;AACPe,MAAAA,IAAI,EAAEtB;AADC,KAAD,CAAR;AAGD;AACF,CA/BM","sourcesContent":["import {\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  USER_LOADED,\n  AUTH_ERROR,\n} from \"../types\";\nimport axios from \"axios\";\nimport { setAlert } from \"./alert\";\nimport setAuthToken from \"../../utils/setAuthToken\";\n\n// Load User\nexport const loadUser = () => async (dispatch) => {\n  if (localStorage.token) {\n    setAuthToken;\n  }\n};\n\n// Register User\nexport const registerUser = ({\n  firstName,\n  lastName,\n  email,\n  password,\n}) => async (dispatch) => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n\n  const body = JSON.stringify({ firstName, lastName, email, password });\n\n  try {\n    const res = await axios.post(\"/api/user\", body, config);\n\n    dispatch({\n      type: REGISTER_SUCCESS,\n      payload: res.data,\n    });\n  } catch (err) {\n    const errors = err.response.errors;\n\n    if (errors) {\n      errors.forEach((error) => dispatch(setAlert(error.msg, \"danger\")));\n    }\n    dispatch({\n      type: REGISTER_FAIL,\n    });\n  }\n};\n"]},"metadata":{},"sourceType":"module"}