{"ast":null,"code":"import { createStore, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunk from \"redux-thunk\"; // import logger from \"redux-logger\";\n\nimport rootReducer from \"./redux/reducers/\";\nconst initialState = {};\nconst middleware = [thunk];\n\nconst loadState = () => {\n  try {\n    const serializedState = localStorage.getItem(\"state\");\n\n    if (serializedState === null) {\n      return undefined;\n    }\n\n    return JSON.parse(serializedState);\n  } catch (e) {\n    return undefined;\n  }\n};\n\nconst saveState = state => {\n  try {\n    const serializedState = JSON.stringify(state);\n    localStorage.setItem(\"state\", serializedState);\n  } catch (e) {// Ignore write errors;\n  }\n};\n\nconst peristedState = loadState();\nstore.subscribe(() => {\n  saveState(store.getState());\n});\nconst store = createStore(rootReducer, persistedState, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nstore.subscribe(() => {\n  saveState(store.getState());\n});\nexport default store;","map":{"version":3,"sources":["/Users/chrisqin/Desktop/cs6083 project/cs6083-front-end-user-server/client/src/store.js"],"names":["createStore","applyMiddleware","composeWithDevTools","thunk","rootReducer","initialState","middleware","loadState","serializedState","localStorage","getItem","undefined","JSON","parse","e","saveState","state","stringify","setItem","peristedState","store","subscribe","getState","persistedState"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,KAAP,MAAkB,aAAlB,C,CACA;;AAEA,OAAOC,WAAP,MAAwB,mBAAxB;AAEA,MAAMC,YAAY,GAAG,EAArB;AACA,MAAMC,UAAU,GAAG,CAACH,KAAD,CAAnB;;AAEA,MAAMI,SAAS,GAAG,MAAM;AACtB,MAAI;AACF,UAAMC,eAAe,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAxB;;AACA,QAAIF,eAAe,KAAK,IAAxB,EAA8B;AAC5B,aAAOG,SAAP;AACD;;AACD,WAAOC,IAAI,CAACC,KAAL,CAAWL,eAAX,CAAP;AACD,GAND,CAME,OAAOM,CAAP,EAAU;AACV,WAAOH,SAAP;AACD;AACF,CAVD;;AAYA,MAAMI,SAAS,GAAIC,KAAD,IAAW;AAC3B,MAAI;AACF,UAAMR,eAAe,GAAGI,IAAI,CAACK,SAAL,CAAeD,KAAf,CAAxB;AACAP,IAAAA,YAAY,CAACS,OAAb,CAAqB,OAArB,EAA8BV,eAA9B;AACD,GAHD,CAGE,OAAOM,CAAP,EAAU,CACV;AACD;AACF,CAPD;;AASA,MAAMK,aAAa,GAAGZ,SAAS,EAA/B;AAEAa,KAAK,CAACC,SAAN,CAAgB,MAAM;AACpBN,EAAAA,SAAS,CAACK,KAAK,CAACE,QAAN,EAAD,CAAT;AACD,CAFD;AAIA,MAAMF,KAAK,GAAGpB,WAAW,CACvBI,WADuB,EAEvBmB,cAFuB,EAGvBlB,YAHuB,EAIvBH,mBAAmB,CAACD,eAAe,CAAC,GAAGK,UAAJ,CAAhB,CAJI,CAAzB;AAOAc,KAAK,CAACC,SAAN,CAAgB,MAAM;AACpBN,EAAAA,SAAS,CAACK,KAAK,CAACE,QAAN,EAAD,CAAT;AACD,CAFD;AAIA,eAAeF,KAAf","sourcesContent":["import { createStore, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunk from \"redux-thunk\";\n// import logger from \"redux-logger\";\n\nimport rootReducer from \"./redux/reducers/\";\n\nconst initialState = {};\nconst middleware = [thunk];\n\nconst loadState = () => {\n  try {\n    const serializedState = localStorage.getItem(\"state\");\n    if (serializedState === null) {\n      return undefined;\n    }\n    return JSON.parse(serializedState);\n  } catch (e) {\n    return undefined;\n  }\n};\n\nconst saveState = (state) => {\n  try {\n    const serializedState = JSON.stringify(state);\n    localStorage.setItem(\"state\", serializedState);\n  } catch (e) {\n    // Ignore write errors;\n  }\n};\n\nconst peristedState = loadState();\n\nstore.subscribe(() => {\n  saveState(store.getState());\n});\n\nconst store = createStore(\n  rootReducer,\n  persistedState,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nstore.subscribe(() => {\n  saveState(store.getState());\n});\n\nexport default store;\n"]},"metadata":{},"sourceType":"module"}