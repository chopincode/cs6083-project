{"ast":null,"code":"var _jsxFileName = \"/Users/chrisqin/Desktop/cs6083/client/src/components/dashboard/DashBoard.js\";\nimport React, { useEffect, Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getCurrentProfile } from \"../../redux/actions/profile\";\nimport Spinner from \"../layout/Spinner\";\n\nconst DashBoard = ({\n  getCurrentProfile,\n  auth: {\n    user\n  },\n  profile: {\n    profile,\n    loading\n  }\n}) => {\n  useEffect(() => {\n    async function fetchProfile() {\n      return await getCurrentProfile();\n    }\n\n    fetchProfile();\n  }, []);\n  return loading && profile === null ? /*#__PURE__*/React.createElement(Spinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }) : /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"large text-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, \"DashBoard\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"lead\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fas fa-user\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, \"Welcome \", user.firstName && user.lastName)));\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  profile: state.profile\n});\n\nexport default connect(mapStateToProps, {\n  getCurrentProfile\n})(DashBoard);","map":{"version":3,"sources":["/Users/chrisqin/Desktop/cs6083/client/src/components/dashboard/DashBoard.js"],"names":["React","useEffect","Fragment","connect","getCurrentProfile","Spinner","DashBoard","auth","user","profile","loading","fetchProfile","firstName","lastName","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,iBAAT,QAAkC,6BAAlC;AACA,OAAOC,OAAP,MAAoB,mBAApB;;AAEA,MAAMC,SAAS,GAAG,CAAC;AACjBF,EAAAA,iBADiB;AAEjBG,EAAAA,IAAI,EAAE;AAAEC,IAAAA;AAAF,GAFW;AAGjBC,EAAAA,OAAO,EAAE;AAAEA,IAAAA,OAAF;AAAWC,IAAAA;AAAX;AAHQ,CAAD,KAIZ;AACJT,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAeU,YAAf,GAA8B;AAC5B,aAAO,MAAMP,iBAAiB,EAA9B;AACD;;AACDO,IAAAA,YAAY;AACb,GALQ,EAKN,EALM,CAAT;AAMA,SAAOD,OAAO,IAAID,OAAO,KAAK,IAAvB,gBACL,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADK,gBAGL,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,SAAS,EAAC,oBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,eAEE;AAAG,IAAA,SAAS,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAG,IAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAoCD,IAAI,CAACI,SAAL,IAAkBJ,IAAI,CAACK,QAA3D,CADF,CAFF,CAHF;AAUD,CArBD;;AAuBA,MAAMC,eAAe,GAAIC,KAAD,KAAY;AAClCR,EAAAA,IAAI,EAAEQ,KAAK,CAACR,IADsB;AAElCE,EAAAA,OAAO,EAAEM,KAAK,CAACN;AAFmB,CAAZ,CAAxB;;AAKA,eAAeN,OAAO,CAACW,eAAD,EAAkB;AAAEV,EAAAA;AAAF,CAAlB,CAAP,CAAgDE,SAAhD,CAAf","sourcesContent":["import React, { useEffect, Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getCurrentProfile } from \"../../redux/actions/profile\";\nimport Spinner from \"../layout/Spinner\";\n\nconst DashBoard = ({\n  getCurrentProfile,\n  auth: { user },\n  profile: { profile, loading },\n}) => {\n  useEffect(() => {\n    async function fetchProfile() {\n      return await getCurrentProfile();\n    }\n    fetchProfile();\n  }, []);\n  return loading && profile === null ? (\n    <Spinner />\n  ) : (\n    <Fragment>\n      <h1 className=\"large text-primary\">DashBoard</h1>\n      <p className=\"lead\">\n        <i className=\"fas fa-user\">Welcome {user.firstName && user.lastName}</i>\n      </p>\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n  profile: state.profile,\n});\n\nexport default connect(mapStateToProps, { getCurrentProfile })(DashBoard);\n"]},"metadata":{},"sourceType":"module"}